/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.componentes.ui.panels;

import com.componentes.controllers.PersistenceManager;
import com.componentes.entitys.Empleados;
import com.componentes.entitys.Proyectos;
import com.componentes.entitys.Vacaciones;
import com.componentes.enums.Puesto;
import com.componentes.services.EmpleadoService;
import com.componentes.services.ProyectoService;
import com.componentes.services.VacacionService;
import com.componentes.utils.TablaUtils;
import jakarta.persistence.EntityManager;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author chris
 */
public class VacacionPanel extends javax.swing.JPanel {

    EntityManager em;

    Vacaciones vacaciones;
    Empleados empleado;

    VacacionService vacacionService;
    EmpleadoService empleadoService;

    /**
     * Creates new form VacacionPanel
     */
    public VacacionPanel() {
        initComponents();

        em = PersistenceManager.getEntityManager();

        rellenarTabla();

        // Obtén la fecha actual
        Date fechaActual = new Date();

        // Crea un formato de fecha
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");

        // Convierte la fecha actual a un String en el formato deseado
        String fechaActualTexto = formatoFecha.format(fechaActual);

        // Establece el texto en el JTextField
        TxtFechaInicioVacaciones.setText(fechaActualTexto);

        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Verificar si la selección de fila cambió
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow != -1) {
                        // Obtener datos de la fila seleccionada y hacer lo que necesites
                        Object id = jTable1.getValueAt(selectedRow, 0);
                        Object cedula = jTable1.getValueAt(selectedRow, 1);
                        Object Fecha_inicio = jTable1.getValueAt(selectedRow, 2);
                        Object Fecha_fin = jTable1.getValueAt(selectedRow, 3);

                        TxtCedulaVaciones.setText(cedula.toString());
                        TxtFechaInicioVacaciones.setText(Fecha_inicio.toString());
                        TxtFechaFinal.setText(Fecha_fin.toString());

                        vacaciones = new Vacaciones();

                        vacaciones.setId(Integer.parseInt(id.toString()));
                        empleado.setCedula(Integer.parseInt(cedula.toString()));
                    }
                }
            }
        });

    }

    public void rellenarTabla() {
        try (EntityManager em = PersistenceManager.getEntityManager()) {
            // Para vaciones
            VacacionService vacacionService = new VacacionService();

            String[] columnsVacaciones = {"id", "Cedula", "Fecha de inicio", "Fecha de fin"};
            List<Vacaciones> vacaciones = vacacionService.readAll(em);
            String[] attVacaciones = {"Id", "Empleado.Cedula", "FechaInicio", "FechaFin"};
            TablaUtils.rellenarTabla(jTable1, columnsVacaciones, vacaciones, attVacaciones);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            PersistenceManager.closeEntityManager(em);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        TxtCedulaVaciones = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TxtFechaFinal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TxtFechaInicioVacaciones = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BtnGuardar = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();
        BtnLimpiar1 = new javax.swing.JButton();
        BtnUpdateEmpleado = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Cedula del empleado");

        TxtCedulaVaciones.setBackground(new java.awt.Color(204, 204, 204));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Fecha de inicio");

        TxtFechaFinal.setBackground(new java.awt.Color(204, 204, 204));
        TxtFechaFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtFechaFinalActionPerformed(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Fecha de fin");

        TxtFechaInicioVacaciones.setBackground(new java.awt.Color(204, 204, 204));
        TxtFechaInicioVacaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtFechaInicioVacacionesActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cedula del empleado", "Fecha inicio de vacaciones", "Fecha fin de vacaciones"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        BtnGuardar.setBackground(new java.awt.Color(0, 0, 204));
        BtnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        BtnGuardar.setText("Guardar");
        BtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarActionPerformed(evt);
            }
        });

        BtnCancelar.setBackground(new java.awt.Color(255, 0, 0));
        BtnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        BtnCancelar.setText("Eliminar");
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        BtnLimpiar1.setBackground(new java.awt.Color(102, 102, 255));
        BtnLimpiar1.setForeground(new java.awt.Color(255, 255, 255));
        BtnLimpiar1.setText("Limpiar");
        BtnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiar1ActionPerformed(evt);
            }
        });

        BtnUpdateEmpleado.setBackground(new java.awt.Color(255, 204, 0));
        BtnUpdateEmpleado.setForeground(new java.awt.Color(0, 0, 0));
        BtnUpdateEmpleado.setText("Actualizar");
        BtnUpdateEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUpdateEmpleadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(BtnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnCancelar))
                            .addComponent(TxtFechaFinal)
                            .addComponent(TxtFechaInicioVacaciones)
                            .addComponent(TxtCedulaVaciones))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(BtnUpdateEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnLimpiar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtCedulaVaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtFechaInicioVacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnGuardar)
                    .addComponent(BtnCancelar))
                .addGap(18, 18, 18)
                .addComponent(BtnUpdateEmpleado)
                .addGap(18, 18, 18)
                .addComponent(BtnLimpiar1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1130, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 615, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnUpdateEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUpdateEmpleadoActionPerformed
        try (EntityManager em = PersistenceManager.getEntityManager()) {

            vacacionService = new VacacionService();
            empleado = empleadoService.read(em, empleado.getId());

            if (empleado != null) {

                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
                Date fechaFinal = formatoFecha.parse(TxtFechaFinal.getText());
                java.sql.Date sqlFechaFinal = new java.sql.Date(fechaFinal.getTime());

                vacaciones.setEmpleado(empleado);
                vacaciones.setFechaFin(sqlFechaFinal);

                vacacionService.update(em, vacaciones);

                JOptionPane.showMessageDialog(null, " Actualizado correctamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Error al obtener", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            BtnLimpiar1ActionPerformed(null);
            PersistenceManager.closeEntityManager(em);
            rellenarTabla();
        }

    }//GEN-LAST:event_BtnUpdateEmpleadoActionPerformed

    private void BtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarActionPerformed
        try (EntityManager em = PersistenceManager.getEntityManager()) {

            vacaciones = new Vacaciones();
            empleado = new Empleados();

            vacacionService = new VacacionService();
            empleadoService = new EmpleadoService();

            // Obtén el número de cédula como String
            String cedulaTexto = TxtCedulaVaciones.getText();

            // Convierte el número de cédula a int
            int numeroCedula = Integer.parseInt(cedulaTexto);

            // Busca al empleado por su cédula
            empleado = empleadoService.readAllByCedula(em, numeroCedula);

            if (empleado != null) {
                // Si se encontró al empleado, procede a guardar las fechas de vacaciones

                // Obtén las fechas desde los JTextField
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
                Date fechaInicio = formatoFecha.parse(TxtFechaInicioVacaciones.getText());
                Date fechaFinal = formatoFecha.parse(TxtFechaFinal.getText());

                // Convierte las fechas a objetos java.sql.Date
                java.sql.Date sqlFechaInicio = new java.sql.Date(fechaInicio.getTime());
                java.sql.Date sqlFechaFinal = new java.sql.Date(fechaFinal.getTime());

                vacaciones.setFechaInicio(sqlFechaInicio);
                vacaciones.setFechaFin(sqlFechaFinal);
                vacaciones.setEmpleado(empleado);

                // Llamar al método create
                vacacionService.create(em, vacaciones);
                JOptionPane.showMessageDialog(null, "Vacaciones agregadas correctamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Si no se encuentra al empleado, muestra un mensaje de error
                JOptionPane.showMessageDialog(null, "No se encontró un empleado con la cédula proporcionada.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            // Maneja la excepción si hay un error al convertir el número de cédula
            // o si el formato de fecha es incorrecto
            JOptionPane.showMessageDialog(null, "Error en el formato de cédula o fecha. "
                    + "Asegúrate de ingresar un número de cédula válido y usar el formato yyyy/MM/dd",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            BtnLimpiar1ActionPerformed(null);
            PersistenceManager.closeEntityManager(em);
            rellenarTabla();
        }
    }//GEN-LAST:event_BtnGuardarActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        try (EntityManager em = PersistenceManager.getEntityManager()) {

            vacacionService = new VacacionService();

            if (vacaciones.getId() != null) {
                vacacionService.delete(em, vacaciones.getId());
                JOptionPane.showMessageDialog(null, "Eliminado correctamente", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un elemento", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            BtnLimpiar1ActionPerformed(null);
            PersistenceManager.closeEntityManager(em);
            rellenarTabla();
        }
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void BtnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiar1ActionPerformed
        TxtCedulaVaciones.setText("");
        TxtFechaInicioVacaciones.setText("");
        TxtFechaFinal.setText("");
        jTable1.clearSelection();

        if (this.vacaciones != null) {
            this.vacaciones.setId(0);
        }    }//GEN-LAST:event_BtnLimpiar1ActionPerformed

    private void TxtFechaInicioVacacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtFechaInicioVacacionesActionPerformed
     }//GEN-LAST:event_TxtFechaInicioVacacionesActionPerformed

    private void TxtFechaFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtFechaFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtFechaFinalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton BtnGuardar;
    private javax.swing.JButton BtnLimpiar1;
    private javax.swing.JButton BtnUpdateEmpleado;
    private javax.swing.JTextField TxtCedulaVaciones;
    private javax.swing.JTextField TxtFechaFinal;
    private javax.swing.JTextField TxtFechaInicioVacaciones;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
